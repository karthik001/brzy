<?xml version="1.0" encoding="UTF-8"?>
<project name="simple-jpa" default="all">
  
  
  <property file="simple-jpa.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  
  <!-- Global Libraries -->
  
  
  <!-- Application Server Libraries -->
  
  <!-- Custom Compiler Taskdefs -->
  
  <!-- Modules -->
  
  
  <!-- Module simple-jpa -->
  
  <dirname property="module.simple-jpa.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.simple-jpa" value="${compiler.args}"/>
  
  <property name="simple-jpa.output.dir" value="${module.simple-jpa.basedir}/out/production/simple-jpa"/>
  <property name="simple-jpa.testoutput.dir" value="${module.simple-jpa.basedir}/out/test/simple-jpa"/>
  
  <path id="simple-jpa.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="simple-jpa.module.classpath"/>
  
  <path id="simple-jpa.runtime.module.classpath">
    <pathelement location="${simple-jpa.output.dir}"/>
    <pathelement location="${simple-jpa.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.simple-jpa">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.simple-jpa">
    <patternset refid="excluded.from.module.simple-jpa"/>
  </patternset>
  
  <path id="simple-jpa.module.sourcepath">
    <dirset dir="${module.simple-jpa.basedir}">
      <include name="src/main/scala"/>
      <include name="src/main/java"/>
    </dirset>
  </path>
  
  <path id="simple-jpa.module.test.sourcepath">
    <dirset dir="${module.simple-jpa.basedir}">
      <include name="src/test/java"/>
      <include name="src/test/scala"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.simple-jpa" depends="compile.module.simple-jpa.production,compile.module.simple-jpa.tests" description="Compile module simple-jpa"/>
  
  <target name="compile.module.simple-jpa.production" description="Compile module simple-jpa; production classes">
    <mkdir dir="${simple-jpa.output.dir}"/>
    <scalac destdir="${simple-jpa.output.dir}">
      <src refid="simple-jpa.module.sourcepath"/>
      <classpath refid="simple-jpa.module.classpath"/>
      <patternset refid="excluded.from.compilation.simple-jpa"/>
    </scalac>
    <javac destdir="${simple-jpa.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.simple-jpa}"/>
      <bootclasspath refid="simple-jpa.module.bootclasspath"/>
      <classpath>
        <pathelement location="${simple-jpa.output.dir}"/>
        <path refid="simple-jpa.module.classpath"/>
      </classpath>
      <src refid="simple-jpa.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.simple-jpa"/>
    </javac>
    
    <copy todir="${simple-jpa.output.dir}">
      <fileset dir="${module.simple-jpa.basedir}/src/main/scala">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.simple-jpa.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
    <scalac destdir="${simple-jpa.testoutput.dir}">
      <src refid="simple-jpa.module.test.sourcepath"/>
      <classpath>
        <path refid="simple-jpa.module.classpath"/>
        <pathelement location="${simple-jpa.output.dir}"/>
      </classpath>
      <patternset refid="excluded.from.compilation.simple-jpa"/>
    </scalac>
    <javac destdir="${simple-jpa.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.simple-jpa}"/>
      <bootclasspath refid="simple-jpa.module.bootclasspath"/>
      <classpath>
        <pathelement location="${simple-jpa.testoutput.dir}"/>
        <path refid="simple-jpa.module.classpath"/>
        <pathelement location="${simple-jpa.output.dir}"/>
      </classpath>
      <src refid="simple-jpa.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.simple-jpa"/>
    </javac>
  </target>
  
  <target name="compile.module.simple-jpa.tests" depends="compile.module.simple-jpa.production" description="compile module simple-jpa; test classes" unless="skip.tests">
    <mkdir dir="${simple-jpa.testoutput.dir}"/>
    
    <copy todir="${simple-jpa.testoutput.dir}">
      <fileset dir="${module.simple-jpa.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.simple-jpa.basedir}/src/test/scala">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.simple-jpa" description="cleanup module">
    <delete dir="${simple-jpa.output.dir}"/>
    <delete dir="${simple-jpa.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.simple-jpa, clean.artifact.simple-jpa:war_exploded" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.simple-jpa" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.simple-jpa:war_exploded" value="${basedir}/out/artifacts/simple_jpa_war_exploded"/>
    <mkdir dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="clean.artifact.simple-jpa:war_exploded" description="clean simple-jpa:war exploded artifact output">
    <delete dir="${artifact.output.simple-jpa:war_exploded}"/>
  </target>
  
  <target name="artifact.simple-jpa:war_exploded" depends="init.artifacts, compile.module.simple-jpa" description="Build &apos;simple-jpa:war exploded&apos; artifact">
    <mkdir dir="${artifact.output.simple-jpa:war_exploded}"/>
    <copy todir="${artifact.output.simple-jpa:war_exploded}">
      <fileset dir="${basedir}/webapp"/>
    </copy>
    <mkdir dir="${artifact.output.simple-jpa:war_exploded}/WEB-INF"/>
    <mkdir dir="${artifact.output.simple-jpa:war_exploded}/WEB-INF/classes"/>
    <copy todir="${artifact.output.simple-jpa:war_exploded}/WEB-INF/classes">
      <fileset dir="${simple-jpa.output.dir}"/>
    </copy>
    <mkdir dir="${artifact.output.simple-jpa:war_exploded}/WEB-INF/lib"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.simple-jpa:war_exploded" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>