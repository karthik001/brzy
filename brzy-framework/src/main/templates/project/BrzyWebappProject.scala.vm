
import sbt._
import sbt.FileUtilities._

class BrzyWebappProject(info: ProjectInfo) extends DefaultWebProject(info) {

  override def mainJavaSourcePath = "src" / "java"
  override def mainScalaSourcePath = "src" / "scala"
  override def mainResourcesPath = "src" / "resources"
  override def testJavaSourcePath = "test" / "java"
  override def testScalaSourcePath = "test" / "scala"
  override def testResourcesPath = "test" / "resources"
  override def webappPath = "webapp"
  override def managedDependencyPath = "project" / "lib"

  // plugin classpath configuration
  val brzyPlugin = config("plugin") hide
  def brzyClasspath = managedClasspath(brzyPlugin)

  // repositories
#foreach($repo in $repositories)
  val repository_$velocityCount = "${repo.id().get()}" at "${repo.url().get()}"
#end

  // dependencies
#foreach($dep in $dependencies)
  val dependency_$velocityCount = "${dep.org().get()}" % "${dep.name().get()}" % "${dep.rev().get()}" % "${dep.conf().get()}"
#end

  // lazy val demo = runTask(Some("sample.Main"), testClasspath).dependsOn(testCompile) describedAs "Runs the demo."
}